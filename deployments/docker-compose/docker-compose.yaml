version: '3.4'

services:
  api:
    image: golang:1.20.0
    restart: "no"
    env_file:
      - ./../../deployments/docker-compose/.env
    depends_on:
      - "db"
    volumes:
      - ./../../:/app
    ports:
      - "8080:8080"
    entrypoint: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; go run /app/cmd/api/main.go'
  verifier:
    image: golang:1.20.0
    restart: "no"
    env_file:
      - ./../../deployments/docker-compose/.env
    depends_on:
      - "db"
    volumes:
      - ./../../:/app
    entrypoint: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; go run /app/cmd/verifier/main.go'
  swagger-ui:
    image: swaggerapi/swagger-ui:v3.51.1
    restart: always
    environment:
      - >
        API_URLS=[
           {
               "name": "Space Trouble API",
               "url": "/spec/swagger.yaml"
           }
        ]
    volumes:
      - ./../../api:/usr/share/nginx/html/spec
    ports:
      - "8085:8080"
  db:
    image: postgres:9.6.18
    restart: "no"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
  migrations-up:
    image: postgres:9.6.18
    restart: "no"
    depends_on:
      - "db"
    environment:
      PGHOST: db
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
    command: >
      bash -c 'while !</dev/tcp/db/5432; do echo "waiting for db"; sleep 1; done; psql -c "
      CREATE TABLE IF NOT EXISTS bookings (
      	id                   varchar(255)  NOT NULL ,
      	status               varchar(25)   NOT NULL ,
      	status_reason        varchar(255)  NOT NULL ,
      	first_name           varchar(255)  NOT NULL ,
      	last_name            varchar(255)  NOT NULL ,
      	gender               varchar(255)  NOT NULL ,
      	birthday             date          NOT NULL ,
      	launchpad_id         varchar(255)  NOT NULL ,
      	destination_id       varchar(255)  NOT NULL ,
      	launch_date          date          NOT NULL ,

      	CONSTRAINT pk_booking_id PRIMARY KEY ( id )
       );
      "'
  # integration tests (manual start)
  test-integration-api:
    image: golang:1.20.0
    profiles:
      - donotstart
    working_dir: /app
    environment:
      SERVER_URL: "http://api:8080"
    volumes:
      - ./../../:/app
    entrypoint: "/bin/bash -c 'go test -count=1 -v ./test/integration/api'"